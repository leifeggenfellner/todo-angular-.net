services:
  db:
    image: postgres:17
    container_name: postgres_db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - app-network
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}"]
      interval: 10s
      timeout: 5s
      retries: 5


  api:
    build:
      context: ./api
      dockerfile: ../.docker/Dockerfile.api
    container_name: dotnet_api
    depends_on:
      db:
        condition: service_healthy
    environment:
      ASPNETCORE_ENVIRONMENT: Development
      ASPNETCORE_URLS: "http://+:80"
      ConnectionStrings__DefaultConnection: "${DB_CONNECTION_STRING}"
    ports:
      - "5000:80"
    networks:
      - app-network


  frontend:
    build:
      context: ./frontend
      dockerfile: ../.docker/Dockerfile.frontend
    container_name: angular_frontend
    depends_on:
      - api
    ports:
      - "4200:4200"
    networks:
      - app-network
    stdin_open: true
    tty: true

volumes:
  pgdata:

networks:
  app-network:
    driver: bridge
